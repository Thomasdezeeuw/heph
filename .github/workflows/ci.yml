name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  contents: read
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
jobs:
  Test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - name: Install Cargo-hack
      run: cargo install --debug cargo-hack
    - name: Run tests
      run: make test_all
  Clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy
    - name: Run Clippy
      run: make clippy_all
  Rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all -- --check
  Sanitiser:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        sanitiser: [address, leak, memory, thread]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - name: Run tests with sanitiser
      run: make test_sanitizer_all sanitizer=${{ matrix.sanitiser }}
  Docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - name: Check docs
      run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps --workspace --all-features
