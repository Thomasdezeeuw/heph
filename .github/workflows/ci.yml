name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
jobs:
  Test:
    runs-on: ubuntu-latest
    # This often run too many iterations on CI, which is not a real error.
    continue-on-error: ${{ matrix.release == 'release' }}
    strategy:
      fail-fast: false
      matrix:
        release: ['', release] # '' => debug.
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: .github/install.bash
    - name: Run tests
      run: cargo test --verbose --${{ matrix.release }}
    - name: Run stress tests
      run: cargo test --verbose --features stress_testing --${{ matrix.release }}
  Miri:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: .github/install.bash
    - name: Add Miri
      run: rustup component add miri
    - name: Run tests in Miri
      run: cargo miri test
  Sanitiser:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitiser: [address, leak, memory, thread]
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: .github/install.bash
    - name: Add rust source
      run: rustup component add rust-src
    - name: Run tests with sanitiser
      # NOTE: Keep `RUSTFLAGS` and `RUSTDOCFLAGS` in sync to ensure the doc
      # tests compile correctly.
      run: >
        RUSTFLAGS="-Z sanitizer=${{ matrix.sanitiser }} -Z sanitizer-memory-track-origins"
        RUSTDOCFLAGS="-Z sanitizer=${{ matrix.sanitiser }} -Z sanitizer-memory-track-origins"
        cargo test -Z build-std --target x86_64-unknown-linux-gnu --features unstable_nightly
