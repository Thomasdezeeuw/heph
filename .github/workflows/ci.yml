name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
jobs:
  Test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: rustup toolchain install nightly
    - name: Set default to nightly compiler
      run: rustup default nightly
    - name: Rustc version
      run: rustc -Vv
    - name: Cargo version
      run: cargo -Vv
    - name: Run tests
      run: make test
  Clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: rustup toolchain install nightly
    - name: Set default to nightly compiler
      run: rustup default nightly
    - name: Add Clippy
      run: rustup component add clippy
    - name: Rustc version
      run: rustc -Vv
    - name: Cargo version
      run: cargo -Vv
    - name: Run Clippy
      run: make clippy
  Rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly compiler
      run: rustup toolchain install nightly
    - name: Set default to nightly compiler
      run: rustup default nightly
    - name: Add rustfmt
      run: rustup component add rustfmt
    - name: Rustc version
      run: rustc -Vv
    - name: Cargo version
      run: cargo -Vv
    - name: Check formatting
      run: cargo fmt --all -- --check
